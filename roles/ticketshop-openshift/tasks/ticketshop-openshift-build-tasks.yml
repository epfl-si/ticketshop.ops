- name: "ghcr.io credentials"
  when: openshift_namespace == ticketshop_build_openshift_namespace
  openshift:
    apiVersion: v1
    kind: Secret
    metadata:
      name: ghcr-io-credentials
      namespace: '{{ openshift_namespace }}'
    type: kubernetes.io/dockerconfigjson
    data:
      .dockerconfigjson: "{{ _docker_auths_dict | to_json | b64encode }}"
  vars:
    _docker_auths_dict:
      # https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
      auths:
        "https://ghcr.io/":
          "auth": "{{ _loginpassword | b64encode }}"
    _loginpassword: >-
      {{ "%s:%s" % (_login, _password) }}
    _login: "{{ keybase_secrets.github.personal_access_token.user }}"
    _password: "{{ keybase_secrets.github.personal_access_token.token }}"
  tags: ticketshop.secrets

- name: "`oc secrets link` into the {{ _builder_service_account }} service account"
  when: openshift_namespace == ticketshop_build_openshift_namespace
  shell:
    cmd: |
      set -e -x
      case "$(oc -n {{ openshift_namespace }} get -o yaml \
                 serviceaccount {{ _builder_service_account }})" in
        *"- name: {{ _docker_hub_secret_name }}"*)
          echo "ALREADY_LINKED"
          exit 0;;
        *)
        oc -n {{ openshift_namespace }} secrets link {{ _builder_service_account }} {{ _docker_hub_secret_name }} --for=pull
      esac
  vars:
    _docker_hub_secret_name: ghcr-io-credentials   # See above
    _builder_service_account: builder  # And not `default`, as incorrectly blogged about
  register: _oc_secrets_link
  changed_when: >-
    _oc_secrets_link
    and
    ( "ALREADY_LINKED" not in _oc_secrets_link.stdout )
  tags: ticketshop.secrets

- name: "Mirror {{ ticketshop_base_image.qualified }} to {{ ticketshop_base_image.mirrored }}"
  when: openshift_namespace == ticketshop_build_openshift_namespace
  openshift:
    kind: ImageStream
    apiVersion: image.openshift.io/v1
    metadata:
      name: "{{ ticketshop_base_image.shortname }}"
      namespace: "{{ openshift_namespace }}"
    spec:
      tags:
        - name: '{{ ticketshop_base_image.tag }}'
          from:
            kind: DockerImage
            name: '{{ ticketshop_base_image.qualified }}'
          importPolicy:
            scheduled: true
          referencePolicy:
            type: Local
  tags:
    - ticketshop.image
    - ticketshop.baseimage

- name: "Build {{ ticketshop_image_name }} from {{ ticketshop_base_image.mirrored }}"
  openshift_imagestream:
    metadata:
      namespace: "{{ openshift_namespace }}"
      name: "{{ ticketshop_image_name }}"
    from: "{{ ticketshop_base_image.mirrored }}"
    source:
      git:
        uri: "https://github.com/epfl-si/ticketshop"
        ref: "master"
    tag: "{{ ticketshop_image_tag }}"
  register: _ticketshop_imagestream
  when:
    - >-
      ticketshop_build_openshift_namespace == openshift_namespace
  tags:
    - ticketshop.image
    - ticketshop.imagestream

- name: "Rebuild {{ ticketshop_image_name }} now"
  shell:
    cmd: "oc -n {{ openshift_namespace }} start-build --wait ticketshop"
  register: "_build_id"
  when:
    - >
      (
        _ticketshop_imagestream | default(False)
        and
        (_ticketshop_imagestream is changed)
      )
      or
      "ticketshop.build" in ansible_run_tags
    - >-
      ticketshop_build_openshift_namespace == openshift_namespace
  tags:
    - ticketshop.build

- debug:
    msg:
      - "You can follow the build logs with: "
      - "oc logs -f bc/ticketshop --version={{ _build_id.stdout | regex_search('\\d+') }} -n {{ openshift_namespace }}"
  when:
    - >
      "stdout" in _build_id
      or
      "ticketshop.build" in ansible_run_tags
    - >-
      ticketshop_build_openshift_namespace == openshift_namespace
  tags:
    - ticketshop.build
